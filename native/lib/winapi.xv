auxilium attributum ("NomenModuli") = "Liber WinAPI";
auxilium attributum ("CreatorModuli") = "Engine Software";
auxilium attributum ("IuraExempli") = "© Engine Software. 2025";
auxilium attributum ("Versio") = "1.0.0.1";

importa cor;

[[systema] librosa]

spatium winapi {
	constatus index_manubrii_in = nint32(-10);
	constatus index_manubrii_ex = nint32(-11);
	constatus index_manubrii_er = nint32(-12);

	structura SYSTEM_INFO {
		nint16 arch;
		nint16 reservatus;
		nint32 pagina;
		nintadl min_adl;
		nintadl max_adl;
		nintadl proc_ind;
		nint32 num_proc;
		nint32 gen_proc;
		nint32 allocatio;
		nint16 plan_proc;
		nint16 rev_proc;
	}
	structura MEMORYSTATUS {
		nint32 long;
		nint32 valor_onerandi;
		nintadl phys_ult;
		nintadl phys;
		nintadl pag_ult;
		nintadl pag;
		nintadl virt_ult;
		nintadl virt;
	}
	structura CONSOLE_SCREEN_BUFFER_INFO {
		nint16 lat;
		nint16 alt;
		nint16 cur_x;
		nint16 cur_y;
		nint16 attr;
		nint16 fen_sin;
		nint16 fen_sup;
		nint16 fen_dex;
		nint16 fen_inf;
		nint16 fen_max_lat;
		nint16 fen_max_alt;
	}
	structura SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
		nintadl indumentum;
		nint32 relatio;
		nint32 data0;
		nint32 data1;
		nint32 data2;
		nintadl data3;
	}
	structura WIN32_FIND_DATA {
		nint32 attr;
		nint32 tempus_cr_inf;
		nint32 tempus_cr_sup;
		nint32 tempus_lg_inf;
		nint32 tempus_lg_sup;
		nint32 tempus_sc_inf;
		nint32 tempus_sc_sup;
		nint32 longitudo_inf;
		nint32 longitudo_sup;
		nint32 res_0;
		nint32 res_1;
		[[non_polire]] ordo [260] nint16 nomen;
		[[non_polire]] ordo [14] nint16 nomen_alternus;
		[[non_polire]] nint32 mac_genus;
		[[non_polire]] nint32 mac_creator;
		[[non_polire]] nint32 mac_modus;
	}
	[[magnitudo] "20"] structura INPUT_RECORD {
		[[positus] "0"] nint16 eventum;
		[[positus] "4"] nint32 tact_status;
		[[positus] "8"] nint16 tact_repl;
		[[positus] "10"] nint16 tact_tactus;
		[[positus] "12"] nint16 tact_codex;
		[[positus] "14"] nint16 tact_utf16;
		[[positus] "16"] nint32 tact_modus;
		[[positus] "4"] nint16 fen_lat;
		[[positus] "6"] nint16 fen_alt;
	}

	functio nint suberror()
	{
		int cdx = GetLastError();
		si (cdx == 0) responde errores.ie_error_nullus;
		si (cdx == 2) responde errores.ie_lima_nulla;
		si (cdx == 3) responde errores.ie_semita_nulla;
		si (cdx == 4) responde errores.ie_limae_apertae_nimium;
		si (cdx == 5) responde errores.ie_permissio_nulla;
		si (cdx == 6) responde errores.ie_manubrium_defectum;
		si (cdx == 8) responde errores.ie_memoria_nulla;
		si (cdx == 14) responde errores.ie_memoria_nulla;
		si (cdx == 15) responde errores.ie_machinatio_defecta;
		si (cdx == 16) responde errores.ie_collectorium_currens_est;
		si (cdx == 17) responde errores.ie_machinatio_idem_non;
		si (cdx == 19) responde errores.ie_legere_sole;
		si (cdx == 20) responde errores.ie_machinatio_defecta;
		si (cdx == 29) responde errores.ie_scribere_falsum;
		si (cdx == 30) responde errores.ie_legere_falsum;
		si (cdx == 32) responde errores.ie_permissio_nulla;
		si (cdx == 33) responde errores.ie_permissio_nulla;
		si (cdx == 39) responde errores.ie_spatium_disci_nullum;
		si (cdx == 50) responde errores.ie_implantatio_nulla;
		si (cdx == 55) responde errores.ie_machinatio_defecta;
		si (cdx == 80) responde errores.ie_lima_preexistat;
		si (cdx == 82) responde errores.ie_creare_falsum;
		si (cdx == 110) responde errores.ie_aperire_falsum;
		si (cdx == 112) responde errores.ie_spatium_disci_nullum;
		si (cdx == 120) responde errores.ie_implantatio_nulla;
		si (cdx == 123) responde errores.ie_nomen_semitae_defectum;
		si (cdx == 145) responde errores.ie_collectorium_vacuum_non;
		si (cdx == 161) responde errores.ie_nomen_semitae_defectum;
		si (cdx == 183) responde errores.ie_lima_preexistat;
		si (cdx == 206) responde errores.ie_nomen_limae_largum_nimium;
		si (cdx == 223) responde errores.ie_lima_larga_nimium;
		si (cdx == 267) responde errores.ie_nomen_semitae_defectum;
		responde errores.ie_error_ignotus;
	}

	[[importa] "ExitProcess"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nihil ExitProcess(nint cdx);
	[[importa] "Sleep"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nihil Sleep(nint32 tempus);
	[[importa] "CloseHandle"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum CloseHandle(nintadl mnbr);
	[[importa] "GetLastError"] [[importa_de] "kernel32"] [stdcall "0"]
	functio nint32 GetLastError();
	[[importa] "SetLastError"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nihil SetLastError(nint32 error);
	[[importa] "GetCurrentProcess"] [[importa_de] "kernel32"] [stdcall "0"]
	functio nintadl GetCurrentProcess();
	[[importa] "GetStdHandle"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nintadl GetStdHandle(nint32 index);
	[[importa] "ReadFile"] [[importa_de] "kernel32"] [stdcall "5"]
	functio logicum ReadFile(nintadl lim, @nihil ad, nint32 long, @nint32 long_leg, @nihil);
	[[importa] "ReadConsoleW"] [[importa_de] "kernel32"] [stdcall "5"]
	functio logicum ReadConsole(nintadl con, @nint16 chr, nint32 num_chr, @nint32 num_chr_leg, @nihil);
	[[importa] "ReadConsoleInputW"] [[importa_de] "kernel32"] [stdcall "4"]
	functio logicum ReadConsoleInput(nintadl con, ~INPUT_RECORD data, nint32 long, @nint32 num_leg);
	[[importa] "WriteFile"] [[importa_de] "kernel32"] [stdcall "5"]
	functio logicum WriteFile(nintadl lim, @nihil ex, nint32 long, @nint32 long_leg, @nihil);
	[[importa] "WriteConsoleW"] [[importa_de] "kernel32"] [stdcall "5"]
	functio logicum WriteConsole(nintadl con, @nint16 chr, nint32 num_chr, @nint32 num_chr_leg, @nihil);
	[[importa] "GetConsoleMode"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum GetConsoleMode(nintadl con, ~nint32 modus);
	[[importa] "SetConsoleMode"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum SetConsoleMode(nintadl con, nint32 modus);
	[[importa] "GetConsoleScreenBufferInfo"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum GetConsoleScreenBufferInfo(nintadl con, ~CONSOLE_SCREEN_BUFFER_INFO modus);
	[[importa] "SetConsoleTitleW"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum SetConsoleTitle(@nint16 titulus);
	[[importa] "AllocConsole"] [[importa_de] "kernel32"] [stdcall "0"]
	functio logicum AllocConsole();
	[[importa] "FlushConsoleInputBuffer"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum FlushConsoleInputBuffer(nintadl con);
	[[importa] "SetConsoleTextAttribute"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum SetConsoleTextAttribute(nintadl con, nint16 attr);
	[[importa] "SetConsoleCursorPosition"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum SetConsoleCursorPosition(nintadl con, nint32 pos);
	[[importa] "CreateConsoleScreenBuffer"] [[importa_de] "kernel32"] [stdcall "5"]
	functio nintadl CreateConsoleScreenBuffer(nint32 perm, nint32 comm, @nihil sec, nint32 modus, @nihil data);
	[[importa] "SetConsoleActiveScreenBuffer"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum SetConsoleActiveScreenBuffer(nintadl con);
	[[importa] "FillConsoleOutputCharacterW"] [[importa_de] "kernel32"] [stdcall "5"]
	functio logicum FillConsoleOutputCharacterW(nintadl con, nint16 chr, nint32 long, nint32 pos, ~nint32 ns);
	[[importa] "FillConsoleOutputAttribute"] [[importa_de] "kernel32"] [stdcall "5"]
	functio logicum FillConsoleOutputAttribute(nintadl con, nint16 attr, nint32 long, nint32 pos, ~nint32 ns);
	[[importa] "GetSystemTime"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nihil GetSystemTime(@nihil tmpsys);
	[[importa] "SystemTimeToFileTime"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum SystemTimeToFileTime(@nihil tmpsys, @nint64 tmp);
	[[importa] "FileTimeToLocalFileTime"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum FileTimeToLocalFileTime(@nint64 tmp_uni, @nint64 tmp_loc);
	[[importa] "LocalFileTimeToFileTime"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum LocalFileTimeToFileTime(@nint64 tmp_loc, @nint64 tmp_uni);
	[[importa] "GetModuleHandleW"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nintadl GetModuleHandle(@nint16 nomen);
	[[importa] "GetProcAddress"] [[importa_de] "kernel32"] [stdcall "2"]
	functio @nihil GetProcAddress(nintadl mdl, @nint8 nomen);
	[[importa] "FindResourceW"] [[importa_de] "kernel32"] [stdcall "3"]
	functio nintadl FindResource(nintadl mdl, nintadl nomen, nintadl genu);
	[[importa] "LoadResource"] [[importa_de] "kernel32"] [stdcall "2"]
	functio nintadl LoadResource(nintadl mdl, nintadl aux);
	[[importa] "SizeofResource"] [[importa_de] "kernel32"] [stdcall "2"]
	functio nint32 SizeofResource(nintadl mdl, nintadl aux);
	[[importa] "LockResource"] [[importa_de] "kernel32"] [stdcall "1"]
	functio @nihil LockResource(nintadl mem);

	[[importa] "GetFileSizeEx"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum GetFileSizeEx(nintadl lim, @int64 long);
	[[importa] "SetFilePointerEx"] [[importa_de] "kernel32"] [stdcall "5"]
	functio logicum SetFilePointerEx(nintadl lim, int64 pos, @int64 posnov, nint32 mth);
	[[importa] "SetEndOfFile"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum SetEndOfFile(nintadl lim);
	[[importa] "FlushFileBuffers"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum FlushFileBuffers(nintadl lim);
	[[importa] "CreatePipe"] [[importa_de] "kernel32"] [stdcall "4"]
	functio logicum CreatePipe(@nintadl legere, @nintadl scribere, @nihil sec, nint32 magn);
	[[importa] "CreateFileW"] [[importa_de] "kernel32"] [stdcall "7"]
	functio nintadl CreateFile(@nint16 nomen, nint32 md, nint32 md_com, @nihil sec, nint32 md_cr, nint32 attr, nintadl praef);
	[[importa] "GetFileTime"] [[importa_de] "kernel32"] [stdcall "4"]
	functio logicum GetFileTime(nintadl lim, @nint64 cr, @nint64 lg, @nint64 sc);
	[[importa] "SetFileTime"] [[importa_de] "kernel32"] [stdcall "4"]
	functio logicum SetFileTime(nintadl lim, @nint64 cr, @nint64 lg, @nint64 sc);

	[[importa] "WaitForSingleObject"] [[importa_de] "kernel32"] [stdcall "2"]
	functio nint32 WaitForSingleObject(nintadl obj, nint32 tmp);
	[[importa] "CreateSemaphoreW"] [[importa_de] "kernel32"] [stdcall "4"]
	functio nintadl CreateSemaphore(@nihil sec, nint32 initialis, nint32 maximus, @nint16 nomen);
	[[importa] "ReleaseSemaphore"] [[importa_de] "kernel32"] [stdcall "3"]
	functio logicum ReleaseSemaphore(nintadl sem, nint32 valor, @nint32 prist);
	[[importa] "CreateEventW"] [[importa_de] "kernel32"] [stdcall "4"]
	functio nintadl CreateEvent(@nihil sec, nint32 manualis, nint32 initialis, @nint16 nomen);
	[[importa] "SetEvent"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum SetEvent(nintadl eve);
	[[importa] "ResetEvent"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum ResetEvent(nintadl eve);
	[[importa] "CreateThread"] [[importa_de] "kernel32"] [stdcall "6"]
	functio nintadl CreateThread(@nihil sec, nintadl acervus, @nihil intr, @nihil arg, nint32 modus, @nint32 adl_num);
	[[importa] "GetExitCodeThread"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum GetExitCodeThread(nintadl mnbr, @nint32 cdx);

	[[importa] "GetCurrentDirectoryW"] [[importa_de] "kernel32"] [stdcall "2"]
	functio nint32 GetCurrentDirectory(nint32 long, @nint16 data);
	[[importa] "SetCurrentDirectoryW"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum SetCurrentDirectory(@nint16 data);
	[[importa] "CreateDirectoryW"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum CreateDirectory(@nint16 nomen, @nihil sec);
	[[importa] "GetFileAttributesW"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nint32 GetFileAttributes(@nint16 nomen);
	[[importa] "CreateHardLinkW"] [[importa_de] "kernel32"] [stdcall "3"]
	functio logicum CreateHardLink(@nint16 nomen, @nint16 ad, @nihil sec);
	[[importa] "CreateSymbolicLinkW"] [[importa_de] "kernel32"] [stdcall "3"]
	functio logicum CreateSymbolicLink(@nint16 nomen, @nint16 ad, nint32 modus);
	[[importa] "GetDiskFreeSpaceExW"] [[importa_de] "kernel32"] [stdcall "4"]
	functio logicum GetDiskFreeSpaceEx(@nint16 semita, @nint64 num_quotus, @nint64 num_ultimus, @nint64 num_liberus);
	[[importa] "GetModuleFileNameW"] [[importa_de] "kernel32"] [stdcall "3"]
	functio logicum GetModuleFileName(nintadl mdl, @nint16 data, nint32 long);
	[[importa] "GetCommandLineW"] [[importa_de] "kernel32"] [stdcall "0"]
	functio @nint16 GetCommandLine();
	[[importa] "GetFileInformationByHandleEx"] [[importa_de] "kernel32"] [stdcall "4"]
	functio logicum GetFileInformationByHandleEx(nintadl mnbr, nint32 cls, @nihil data, nint32 data_long);

	[[importa] "FindFirstFileW"] [[importa_de] "kernel32"] [stdcall "2"]
	functio nintadl FindFirstFile(@nint16 nomen, ~WIN32_FIND_DATA data);
	[[importa] "FindNextFileW"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum FindNextFile(nintadl mnbr, ~WIN32_FIND_DATA data);
	[[importa] "FindClose"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum FindClose(nintadl mnbr);
	[[importa] "GetLogicalDrives"] [[importa_de] "kernel32"] [stdcall "0"]
	functio nint32 GetLogicalDrives();
	[[importa] "GetVolumeInformationW"] [[importa_de] "kernel32"] [stdcall "8"]
	functio logicum GetVolumeInformation(@nint16 radix, @nint16 nomen, nint32 nomen_long, @nint32 numerus, @nint32 longmax, @nint32 modus, @nint16 sln, nint32 sln_long);
	[[importa] "GetFinalPathNameByHandleW"] [[importa_de] "kernel32"] [stdcall "4"]
	functio nint32 GetFinalPathNameByHandle(nintadl mnbr, @nint16 semita, nint32 long, nint32 modus);
	[[importa] "MoveFileW"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum MoveFile(@nint16 ex, @nint16 ad);
	[[importa] "DeleteFileW"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum DeleteFile(@nint16 nomen);
	[[importa] "RemoveDirectoryW"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum RemoveDirectory(@nint16 nomen);

	[[importa] "GetSystemInfo"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nihil GetSystemInfo(~SYSTEM_INFO inf);
	[[importa] "GlobalMemoryStatus"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nihil GlobalMemoryStatus(~MEMORYSTATUS stat);
	[[importa] "GetVersion"] [[importa_de] "kernel32"] [stdcall "0"]
	functio nint32 GetVersion();

	[[importa] "TlsAlloc"] [[importa_de] "kernel32"] [stdcall "0"]
	functio nint32 TlsAlloc();
	[[importa] "TlsFree"] [[importa_de] "kernel32"] [stdcall "1"]
	functio logicum TlsFree(nint32 mnbr);
	[[importa] "TlsGetValue"] [[importa_de] "kernel32"] [stdcall "1"]
	functio nintadl TlsGetValue(nint32 mnbr);
	[[importa] "TlsSetValue"] [[importa_de] "kernel32"] [stdcall "2"]
	functio logicum TlsSetValue(nint32 mnbr, nintadl valor);

	[[importa] "BCryptOpenAlgorithmProvider"] [[importa_de] "bcrypt"] [stdcall "4"]
	functio nint32 BCryptOpenAlgorithmProvider(~nintadl mnbr, @nint16 alg, @nint16 impl, nint32 modus);
	[[importa] "BCryptCloseAlgorithmProvider"] [[importa_de] "bcrypt"] [stdcall "2"]
	functio nint32 BCryptCloseAlgorithmProvider(nintadl mnbr, nint32 modus);
	[[importa] "BCryptGenRandom"] [[importa_de] "bcrypt"] [stdcall "4"]
	functio nint32 BCryptGenRandom(nintadl mnbr, @nihil data, nint32 long, nint32 modus);

	[[importa] "InitCommonControls"] [[importa_de] "comctl32"] [stdcall "0"]
	functio nihil InitCommonControls();
	[[importa] "CoInitializeEx"] [[importa_de] "ole32"] [stdcall "2"]
	functio int32 CoInitializeEx(@nihil, nint32 modus);

	[[importa] "MessageBoxW"] [[importa_de] "user32"] [stdcall "4"]
	functio nint MessageBox(nintadl fen, @nint16 sciptio, @nint16 titulus, nint modus);

	[[importa] "timeGetTime"] [[importa_de] "winmm"] [stdcall "0"]
	functio nint32 timeGetTime();
	[[importa] "CommandLineToArgvW"] [[importa_de] "shell32"] [stdcall "2"]
	functio @@nint16 CommandLineToArgv(@nint16 imp, @int num);
	[[importa] "ShellExecuteW"] [[importa_de] "shell32"] [stdcall "6"]
	functio nintadl ShellExecute(nintadl fenestra, @nint16 imperatum, @nint16 lima, @nint16 argumenta, @nint16 semita, int modus);
	[[importa] "LocalFree"] [[importa_de] "kernel32"] [stdcall "1"]
	functio @nihil LocalFree(@nihil mem);

	[[importa] "RegOpenKeyExW"] [[importa_de] "advapi32"] [stdcall "5"]
	functio nint32 RegOpenKeyEx(nintadl col, @nint16 nomen, nint32 modus, nint32 perm, @nintadl scol);
	[[importa] "RegCloseKey"] [[importa_de] "advapi32"] [stdcall "1"]
	functio nint32 RegCloseKey(nintadl col);
	[[importa] "RegQueryValueExW"] [[importa_de] "advapi32"] [stdcall "6"]
	functio nint32 RegQueryValueEx(nintadl col, @nint16 valor, @nihil, @nint32 genu, @nihil data, @nint32 magn);

	spatium dynamice {
		spatium adloquium {
			[[importa] "GetPhysicallyInstalledSystemMemory"] [[importa_de] "kernel32"] ["xn.dynamice.adl"]
			functio @nihil GetPhysicallyInstalledSystemMemory();
			[[importa] "GetLogicalProcessorInformation"] [[importa_de] "kernel32"] ["xn.dynamice.adl"]
			functio @nihil GetLogicalProcessorInformation();
			[[importa] "GetNativeSystemInfo"] [[importa_de] "kernel32"] ["xn.dynamice.adl"]
			functio @nihil GetNativeSystemInfo();
			[[importa] "IsWow64Process2"] [[importa_de] "kernel32"] ["xn.dynamice.adl"]
			functio @nihil IsWow64Process2();
			[[importa] "IsWow64GuestMachineSupported"] [[importa_de] "kernel32"] ["xn.dynamice.adl"]
			functio @nihil IsWow64GuestMachineSupported();
			[[importa] "GetMachineTypeAttributes"] [[importa_de] "kernel32"] ["xn.dynamice.adl"]
			functio @nihil GetMachineTypeAttributes();
		}
		spatium invocator {
			[[importa] "GetPhysicallyInstalledSystemMemory"] [[importa_de] "kernel32"] ["xn.dynamice.inv" "1"]
			functio logicum GetPhysicallyInstalledSystemMemory(@nihil func, @int64 mem);
			[[importa] "GetLogicalProcessorInformation"] [[importa_de] "kernel32"] ["xn.dynamice.inv" "2"]
			functio logicum GetLogicalProcessorInformation(@nihil func, @SYSTEM_LOGICAL_PROCESSOR_INFORMATION inf, @nint32 long);
			[[importa] "GetNativeSystemInfo"] [[importa_de] "kernel32"] ["xn.dynamice.inv" "1"]
			functio nihil GetNativeSystemInfo(@nihil func, ~SYSTEM_INFO inf);
			[[importa] "IsWow64Process2"] [[importa_de] "kernel32"] ["xn.dynamice.inv" "3"]
			functio logicum IsWow64Process2(@nihil func, nintadl proc, @nint16 arch_proc, @nint16 arch_mach);

			[[importa] "IsWow64GuestMachineSupported"] [[importa_de] "kernel32"] ["xn.dynamice.inv" "2"]
			functio int32 IsWow64GuestMachineSupported(@nihil func, nint16 arch, @nint32 status);
			[[importa] "GetMachineTypeAttributes"] [[importa_de] "kernel32"] ["xn.dynamice.inv" "2"]
			functio int32 GetMachineTypeAttributes(@nihil func, nint16 arch, @nint32 status);
		}
	}
}