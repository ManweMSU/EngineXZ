auxilium attributum ("NomenModuli") = "Liber Canonicalis";
auxilium attributum ("CreatorModuli") = "Engine Software";
auxilium attributum ("IuraExempli") = "© Engine Software. 2024";
auxilium attributum ("Versio") = "1.0.0.1";

importa cor;
importa memoria;
importa lineae;
importa mathcan;
importa flumeni;
importa contextus;
importa errores;

[[systema] libera]

spatium systema {
	enumeratio architectura {
		ignota	= 0x00,
		i386	= 0x01,
		x64		= 0x11,
		arm_m32	= 0x02,
		arm_a64	= 0x12
	}
	enumeratio operans {
		ignota	= 0x00,
		windows	= 0x01,
		macos	= 0x02,
		linux	= 0x03
	}

	structura informatio {
		int64 frequentia_processoris;
		int64 numerus_memoriae;
		linea nomen_processoris;
		operans systema_machinae;
		architectura architectura_machinae;
		architectura architectura_processi;
		int32 numerus_cordium_corporalium;
		int32 numerus_cordium_virtualium;
		int32 versio_systemae_supera;
		int32 versio_systemae_inferna;
	}

	functio nihil para_informationem(~informatio inf) {
		var func_para_mem = winapi.dynamice.adloquium.GetPhysicallyInstalledSystemMemory();
		var func_para_prc = winapi.dynamice.adloquium.GetLogicalProcessorInformation();
		var func_para_mach_v10 = winapi.dynamice.adloquium.IsWow64Process2();
		var func_para_mach_v6 = winapi.dynamice.adloquium.GetNativeSystemInfo();
		inf.systema_machinae = operans.windows;
		si (func_para_mem != nullus) {
			winapi.dynamice.invocator.GetPhysicallyInstalledSystemMemory(func_para_mem, @inf.numerus_memoriae);
			inf.numerus_memoriae *= 0x400;
		} alioqui {
			winapi.MEMORYSTATUS stat;
			winapi.GlobalMemoryStatus(stat);
			inf.numerus_memoriae = stat.phys_ult;
		}
		winapi.SYSTEM_INFO sysinf;
		winapi.GetSystemInfo(sysinf);
		inf.numerus_cordium_virtualium = sysinf.num_proc;
		inf.numerus_cordium_corporalium = sysinf.num_proc;
		si (func_para_prc != nullus) proba {
			ordo winapi.SYSTEM_LOGICAL_PROCESSOR_INFORMATION pi;
			nint32 long = 0;
			var status = winapi.dynamice.invocator.GetLogicalProcessorInformation(func_para_prc, nullus, @long);
			si (!status && winapi.GetLastError() == nint32(122)) {
				pi.longitudo = nintadl(long) / magnitudo(winapi.SYSTEM_LOGICAL_PROCESSOR_INFORMATION);
				si (winapi.dynamice.invocator.GetLogicalProcessorInformation(func_para_prc, pi.data, @long)) {
					inf.numerus_cordium_corporalium = 0;
					per (var i : pi) si (pi[i].relatio == 0) inf.numerus_cordium_corporalium++;
				}
			}
		}
		var sysver = winapi.GetVersion();
		inf.versio_systemae_supera = sysver & nint(0xFF);
		inf.versio_systemae_inferna = (sysver & nint(0xFF00)) >> nint(8);
		si (func_para_mach_v10 != nullus && func_para_mach_v6 != nullus) {
			nint16 arch_proc, arch_mach;
			si (winapi.dynamice.invocator.IsWow64Process2(func_para_mach_v10, winapi.GetCurrentProcess(), @arch_proc, @arch_mach)) {
				si (arch_mach == nint16(0xAA64)) inf.architectura_machinae = architectura.arm_a64;
				alioqui si (arch_mach == nint16(0x8664)) inf.architectura_machinae = architectura.x64;
				alioqui si (arch_mach == nint16(0x01C2)) inf.architectura_machinae = architectura.arm_m32;
				alioqui si (arch_mach == nint16(0x014C)) inf.architectura_machinae = architectura.i386;
				alioqui inf.architectura_machinae = architectura.ignota;
			} alioqui {
				winapi.dynamice.invocator.GetNativeSystemInfo(func_para_mach_v6, sysinf);
				si (sysinf.arch == nint16(12)) inf.architectura_machinae = architectura.arm_a64;
				alioqui si (sysinf.arch == nint16(9)) inf.architectura_machinae = architectura.x64;
				alioqui si (sysinf.arch == nint16(5)) inf.architectura_machinae = architectura.arm_m32;
				alioqui si (sysinf.arch == nint16(0)) inf.architectura_machinae = architectura.i386;
				alioqui inf.architectura_machinae = architectura.ignota;
			}
		} alioqui {
			si (func_para_mach_v6 != nullus) winapi.dynamice.invocator.GetNativeSystemInfo(func_para_mach_v6, sysinf);
			si (sysinf.arch == nint16(12)) inf.architectura_machinae = architectura.arm_a64;
			alioqui si (sysinf.arch == nint16(9)) inf.architectura_machinae = architectura.x64;
			alioqui si (sysinf.arch == nint16(5)) inf.architectura_machinae = architectura.arm_m32;
			alioqui si (sysinf.arch == nint16(0)) inf.architectura_machinae = architectura.i386;
			alioqui inf.architectura_machinae = architectura.ignota;
		} 
		inf.architectura_processi = __architectura();
		inf.frequentia_processoris = 0;
		proba {
			ordo nint16 nomen;
			nint32 freq_MHz;
			nint32 long;
			nomen.longitudo = 0x100;
			nintadl hhw, hdesc, hsys, hcp, h0;
			si (winapi.RegOpenKeyEx(0x80000002, linea_utf16("HARDWARE"), 0, 0x20019, @hhw) == nint32(0)) {
				si (winapi.RegOpenKeyEx(hhw, linea_utf16("DESCRIPTION"), 0, 0x20019, @hdesc) == nint32(0)) {
					si (winapi.RegOpenKeyEx(hdesc, linea_utf16("System"), 0, 0x20019, @hsys) == nint32(0)) {
						si (winapi.RegOpenKeyEx(hsys, linea_utf16("CentralProcessor"), 0, 0x20019, @hcp) == nint32(0)) {
							si (winapi.RegOpenKeyEx(hcp, linea_utf16("0"), 0, 0x20019, @h0) == nint32(0)) {
								long = 4;
								si (winapi.RegQueryValueEx(h0, linea_utf16("~MHz"), nullus, nullus, @freq_MHz, @long) == nint32(0)) {
									inf.frequentia_processoris = nint64(freq_MHz) * nint64(1000000);
								}
								long = nomen.longitudo * 2;
								si (winapi.RegQueryValueEx(h0, linea_utf16("ProcessorNameString"), nullus, nullus, nomen.data, @long) == nint32(0)) {
									proba inf.nomen_processoris = linea(nomen.data, int(long) / 2, linea.codex.utf16);
								}
								winapi.RegCloseKey(h0);
							}
							winapi.RegCloseKey(hcp);
						}
						winapi.RegCloseKey(hsys);
					}
					winapi.RegCloseKey(hdesc);
				}
				winapi.RegCloseKey(hhw);
			}
		} cape inf.frequentia_processoris = 0;
	}
	functio logicum proba_architecturam(architectura arch) {
		var func_prob_v11 = winapi.dynamice.adloquium.GetMachineTypeAttributes();
		var func_prob_v10 = winapi.dynamice.adloquium.IsWow64GuestMachineSupported();
		var func_prob_v10A = winapi.dynamice.adloquium.IsWow64Process2();
		var func_prob_v6 = winapi.dynamice.adloquium.GetNativeSystemInfo();
		si (func_prob_v11 != nullus) {
			nint16 va;
			si (arch == architectura.arm_a64) va = 0xAA64;
			alioqui si (arch == architectura.arm_m32) va = 0x01C2;
			alioqui si (arch == architectura.x64) va = 0x8664;
			alioqui si (arch == architectura.i386) va = 0x014C;
			alioqui responde non;
			nint32 stat;
			si (winapi.dynamice.invocator.GetMachineTypeAttributes(func_prob_v11, va, @stat) == 0) responde stat & 1;
			alioqui responde non;
		} alioqui si (func_prob_v10 != nullus && func_prob_v10A != nullus) {
			nint16 va;
			si (arch == architectura.arm_a64) va = 0xAA64;
			alioqui si (arch == architectura.arm_m32) va = 0x01C2;
			alioqui si (arch == architectura.x64) va = 0x8664;
			alioqui si (arch == architectura.i386) va = 0x014C;
			alioqui responde non;
			nint16 ap, am;
			winapi.dynamice.invocator.IsWow64Process2(func_prob_v10A, winapi.GetCurrentProcess(), @ap, @am);
			si (am == va) responde sic;
			nint32 stat;
			si (winapi.dynamice.invocator.IsWow64GuestMachineSupported(func_prob_v10, va, @stat) == 0) responde stat;
			alioqui responde non;
		} alioqui si (func_prob_v6 != nullus) {
			winapi.SYSTEM_INFO sysinf;
			winapi.dynamice.invocator.GetNativeSystemInfo(func_prob_v6, sysinf);
			si (sysinf.arch == nint16(9)) responde arch == architectura.x64 || arch == architectura.i386;
			alioqui si (sysinf.arch == nint16(0)) responde arch == architectura.i386;
			alioqui responde non;
		} alioqui responde arch == architectura.i386;
	}
}
genus meta hereditat objectum {
	constatus attributum_nomen_moduli	= "NomenModuli";
	constatus attributum_creator_moduli	= "CreatorModuli";
	constatus attributum_iura_exempli	= "IuraExempli";
	constatus attributum_versio			= "Versio";

	structor() {}

	functio int initus() virtualis pura;
	functio int finis() virtualis pura;
	functio int prae_initus() virtualis pura;
	functio int post_finis() virtualis pura;

	functio linea operator [] (int num) iacit virtualis pura;
	functio linea operator [] (~linea attr) iacit virtualis pura;

	classis functio adl[meta] moduli(@nihil mdl) iacit { iace errores.implantatio_nulla; }
}

[[importa] "xn/architectura"] functio int __architectura();
[[importa] "xn/ini/modulos"] functio nihil __ini_modulos() iacit;
[[importa] "xn/exi/modulos"] functio nihil __exi_modulos() iacit;
[[importa] "xn/introitus"] functio nihil __introitus_ordinarius() iacit;

["xn.introitus" "consolatorium,commctrl,com,silens"] functio nihil __introitus_radicalis_0() {
	winapi.InitCommonControls();
	si (winapi.CoInitializeEx(nullus, 2) < 0) winapi.ExitProcess(errores.habitus_falsus);
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "commctrl,com,silens"] functio nihil __introitus_radicalis_1() {
	winapi.InitCommonControls();
	si (winapi.CoInitializeEx(nullus, 2) < 0) winapi.ExitProcess(errores.habitus_falsus);
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "consolatorium,commctrl,com"] functio nihil __introitus_radicalis_2() {
	proba {
		winapi.InitCommonControls();
		si (winapi.CoInitializeEx(nullus, 2) < 0) {
			var error = linea_utf16("Error COM incipiendi.\n");
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace errores.habitus_falsus;
		}
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}
["xn.introitus" "commctrl,com"] functio nihil __introitus_radicalis_3() {
	proba {
		winapi.InitCommonControls();
		si (winapi.CoInitializeEx(nullus, 2) < 0) {
			var error = linea_utf16("Error COM incipiendi.");
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace errores.habitus_falsus;
		}
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}
["xn.introitus" "consolatorium,com,silens"] functio nihil __introitus_radicalis_4() {
	si (winapi.CoInitializeEx(nullus, 2) < 0) winapi.ExitProcess(errores.habitus_falsus);
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "com,silens"] functio nihil __introitus_radicalis_5() {
	si (winapi.CoInitializeEx(nullus, 2) < 0) winapi.ExitProcess(errores.habitus_falsus);
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "consolatorium,com"] functio nihil __introitus_radicalis_6() {
	proba {
		si (winapi.CoInitializeEx(nullus, 2) < 0) {
			var error = linea_utf16("Error COM incipiendi.\n");
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace errores.habitus_falsus;
		}
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}
["xn.introitus" "com"] functio nihil __introitus_radicalis_7() {
	proba {
		si (winapi.CoInitializeEx(nullus, 2) < 0) {
			var error = linea_utf16("Error COM incipiendi.");
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace errores.habitus_falsus;
		}
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}
["xn.introitus" "consolatorium,commctrl,silens"] functio nihil __introitus_radicalis_8() {
	winapi.InitCommonControls();
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "commctrl,silens"] functio nihil __introitus_radicalis_9() {
	winapi.InitCommonControls();
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "consolatorium,commctrl"] functio nihil __introitus_radicalis_a() {
	proba {
		winapi.InitCommonControls();
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}
["xn.introitus" "commctrl"] functio nihil __introitus_radicalis_b() {
	proba {
		winapi.InitCommonControls();
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}
["xn.introitus" "consolatorium,silens"] functio nihil __introitus_radicalis_c() {
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "silens"] functio nihil __introitus_radicalis_d() {
	proba __ini_modulos(); cape (nintadl e) winapi.ExitProcess(e);
	proba __introitus_ordinarius(); cape (nintadl e) winapi.ExitProcess(e);
	proba __exi_modulos();
	winapi.ExitProcess(0);
}
["xn.introitus" "consolatorium"] functio nihil __introitus_radicalis_e() {
	proba {
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.\n", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.WriteConsole(winapi.GetStdHandle(winapi.index_manubrii_er), error, error.longitudo, @nint(), nullus);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}
["xn.introitus" ""] functio nihil __introitus_radicalis_f() {
	proba {
		proba __ini_modulos(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error incipiendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error incipiendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __introitus_ordinarius(); cape (nintadl e, nintadl se) {
			linea le, lse;
			errores.descriptio(e, se, le, lse);
			var error = linea_utf16(lse.longitudo ?
				linea.forma("Error exequendi #%0:%1: %2 - %3.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le, lse) :
				linea.forma("Error exequendi #%0:%1: %2.", linea(e, linea.radix_sextadecima, 4), linea(se, linea.radix_sextadecima, 4), le));
			winapi.MessageBox(0, error, nullus, 0x2010);
			iace e;
		}
		proba __exi_modulos();
		winapi.ExitProcess(0);
	} cape (nintadl e) winapi.ExitProcess(e);
}