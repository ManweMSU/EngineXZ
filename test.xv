importa canonicalis;
importa consolatorium;
importa limae;

genus test hereditat objectum {
	int valor;

	structor(int v) { funda valor(v); proba actuarius.scribe("created: " + linea(valor)); }
	destructor() { proba actuarius.scribe("destroyed: " + linea(valor)); }

	functio nihil do_something()
	{
		proba {
			var task = contextus.labos_opperitus ## {
				contextus.dormi(3000);
				proba actuarius.scribe("task fire: " + linea(valor));
			};
			contextus.exeque(task);
			task^.para_signale()^.opperire();
		}
	}
}

praeforma operator parallel_context() {
	.contextus.exeque(.contextus.labos ## { $_ })
}

functio nihil primus() introitus iacit
{
	var ~ cns = consolatorium.currens()^;
	cns.titulus = "сука ты пидор";
	cns.color_primus = consolatorium.color.viridis;

	var args = para_argumenta();
	cns.scribe_lineam(linea.ex(args));

	cns.color_primus = consolatorium.color.defalta;

	dfrac f1 = 5.0, f2 = 2.0;
	linea e, se;
	errores.descriptio(4, 5, e, se);
	actuarius.scribe(e);
	actuarius.scribe(se);
	actuarius.scribe(math.sin(f1 / f2));
	actuarius.scribe(int64(60606060) * int64(1000000));
	systema.informatio inf;
	systema.para_informatio(inf);
	actuarius.scribe(linea.ex(inf));

	var actx = contextus.crea_caudam_filorum();
	muta_contextum_et_opperire(actx) {
		pro (var i : [0, 5]) {
			proba actuarius.scribe(linea.forma("waiting: %0", i));
			contextus.dormi(1000);
		}
	}^.opperire();

	var t = crea(test, 234);

	t^.do_something();

	actuarius.scribe("suka ty pidor");

	linea("pidor").ad_int32();
	iace 666;
}