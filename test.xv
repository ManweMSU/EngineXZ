importa canonicalis;

[[importa] "WriteConsoleW"]
[[importa_de] "C:\\Windows\\System32\\Kernel32.dll"]
functio int WriteConsole(nintadl, @nint16, int, @int, @nihil);

[[importa] "GetStdHandle"]
[[importa_de] "C:\\Windows\\System32\\Kernel32.dll"]
functio nintadl GetStdHandle(int);

[[importa] "read_bool"]
functio logicum ReadBool();

//var nint64 buffer0, buffer1, buffer2, buffer3, buffer4, buffer5, buffer6, buffer7, buffer8, buffer9;
var ordo [256] nint16 buffer;
functio nihil Decompose(@char text, ~@nint16 utf16, ~int length)
{
	length = 0;

	utf16 = buffer;

	//utf16 = (@nint16) (@buffer0);
	//var ~ buffer = (@ordo [40] nint16)(@buffer0)^;

	dum (text[length]) { buffer[length] = text[length]; length++; }
	buffer[length] = 0;
}
functio nihil Print(@char text)
{
	int length; @nint16 utf16;
	Decompose(text, utf16, length);
	WriteConsole(GetStdHandle(-11), utf16, length, nullus, nullus);
}
functio nihil Print(int integer)
{
	nint64 bfr;
	@char num = (@char)(@bfr);
	num[0] = '0' + integer;
	num[1] = 0;
	Print(num);
}

var int counter = 0;

genus TEST {
	int value;

	structor ()
	{
		counter++; value = counter;
		Print("CTOR INIT: ");
		Print(value);
		Print("\n");
	}
	structor (~TEST src)
	{
		counter++; value = counter;
		Print("CTOR COPY: ");
		Print(value);
		Print("\n");
	}
	structor (int i) iacit { iace 321; }
	destructor ()
	{
		Print("DTOR: ");
		Print(value);
		Print("\n");
		ego^.print_shit();
	}
	functio nihil print_shit()
	{
		Print("SHIT: ");
		Print(value);
		Print("\n");
	}
	functio int initus() { responde 4; }
	functio int prae_initus() { responde 3; }
	functio int finis() { responde 8; }
	functio int post_finis() { responde 9; }
}

genus TEST2 hereditat TEST {
	nint64 value_2;
	structor () {
		value = value_2 = 8;
		Print("PRIVET-TEST-2\n");
		print_shit();
	}
}

protocollum IConsole {
	functio nihil PrintInteger(int value) virtualis pura;
	functio nihil PrintLogicum(logicum value) virtualis pura;
}
genus Integer {
	int _value;
	structor () {}
}
genus ShiftedConsole hereditat Integer : IConsole
{
	@IConsole _console;
	structor () iacit { iace 123; }
	structor (@IConsole dropback, int value) iacit { _value = value; _console = dropback; }
	functio nihil PrintInteger(int value) redefini { _console^.PrintInteger(value + _value); }
	functio nihil PrintLogicum(logicum value) redefini { _console^.PrintInteger(int(value) + _value); }
	functio nihil Print() { _console^.PrintInteger(555); }
}

[[importa] "use_cns"]
functio nihil UseConsole(@IConsole console);

functio nihil some_shit(@IConsole console)
{
	(@ShiftedConsole)(console)^._value = -10;
	console^.PrintInteger(111);
}

genus TEST_AUTO hereditat ShiftedConsole {
	TEST _test;
	structor () iacit
	{
		funda _test(TEST());
		funda ( (@IConsole)(protocollum(cns)), 0 );
	}
	destructor () {}

	int auto_value {
		adipisce {
			counter++;
			responde counter;
		}
		loca {
			.Print("SET PROP: ");
			PrintInteger(valor);
		}
	}
}

genus cond_init
{
	int shit;

	structor () iacit
	{
		shit = counter;
		counter++;
		Print("before init: "); Print(shit); Print("\n");
		si (ReadBool()) iace 531;
		Print("after init: "); Print(shit); Print("\n");
	}
	destructor ()
	{
		Print("destroy: "); Print(shit); Print("\n");
	}
}

structura struct
{
	TEST value1;
	int value2;
	TEST value3;
	int value4;
}

structura struct_2 hereditat struct
{
	TEST value5;
}

functio nihil primus() introitus iacit
{
	ShiftedConsole cns66( (@IConsole)(protocollum(cns)), 0 );
	struct_2 CS;
	CS.value2 = 44;
	CS.value4 = 88;

	struct CS2 = CS;

	cns66.PrintInteger(CS.value2);
	cns66.PrintInteger(CS.value4);
	cns66.PrintInteger(CS2.value2);
	cns66.PrintInteger(CS2.value4);

	responde;

	ordo [3] cond_init CI;

	TEST test = TEST();
	TEST2 test2;
	test2.value = 66;
	test2.value_2 = 77;

	ShiftedConsole cns( (@IConsole)(protocollum(cns)), 10 );
	//@IConsole cns2 = @cns;

	cns.Print();
	cns.PrintInteger(666);
	cns.PrintLogicum(sic);

	UseConsole(@cns);
	some_shit(@cns);

	TEST_AUTO test_auto;
	test_auto.PrintInteger(666);

	test_auto.PrintInteger(test_auto.auto_value);
	test_auto.PrintInteger(test_auto.auto_value);
	test_auto.PrintInteger(test_auto.auto_value);

	test_auto.auto_value = 5050;
	test_auto.auto_value += 20;
	test_auto.auto_value++;

	ordo [5] TEST TESTARRAY;
	pro (var i : ~TESTARRAY) test_auto.PrintInteger(i);

	var cpy = TESTARRAY;

	iace magnitudo(test2);

	test.print_shit();
	Print("suka ty pidor\n");

	pro (var cnt : test) {
		Print("LOOP: ");
		Print(cnt);
		Print("\n");
	}

	iace 666;
}