importa tests;
importa consolatorium;
importa lxx;

var ~ consolatorium con = consolatorium.currens()^;

functio nihil sectio(~linea nomen) iacit
{
	con.color_primus = consolatorium.color.flavus;
	con.scribe_lineam("ТЕСТ " + nomen);
	con.color_primus = consolatorium.color.defalta;
}
functio nihil probatio(~linea nomen, int r) iacit
{
	con.color_primus = consolatorium.color.albus;
	con.scribe("  ");
	con.scribe(nomen);
	con.scribe(": ");
	con.color_primus = r ? consolatorium.color.viridis : consolatorium.color.ruber;
	con.scribe_lineam(r ? "Успешно" : "Провален");
	con.color_primus = consolatorium.color.defalta;
	si (!r) iace 1;
}
functio nihil invalida(~ordo [8] int r) { per (var i : [0, 7]) r[i] = 0; }

functio nihil ini() introitus iacit
{
	ordo [8] int r1, r2;
	proba con acsi (xx.xc)^.clode_fenestram = non;

	invalida(r1);
	sectio("[d]frac -> int [1]");
	VPU_TESTS.TEST1(@r1);
	probatio("frac1  -> int   ", r1[0]);
	probatio("frac2  -> int[2]", r1[1]);
	probatio("frac3  -> int[3]", r1[2]);
	probatio("frac4  -> int[4]", r1[3]);
	probatio("dfrac1 -> int   ", r1[4]);
	probatio("dfrac2 -> int[2]", r1[5]);
	probatio("dfrac3 -> int[3]", r1[6]);
	probatio("dfrac4 -> int[4]", r1[7]);

	invalida(r2);
	sectio("*** -> [d]frac [2]");
	VPU_TESTS.TEST2(@r2);
	probatio("*** -> frac1 ", r2[0]);
	probatio("*** -> frac2 ", r2[1]);
	probatio("*** -> frac3 ", r2[2]);
	probatio("*** -> frac4 ", r2[3]);
	probatio("*** -> dfrac1", r2[4]);
	probatio("*** -> dfrac2", r2[5]);
	probatio("*** -> dfrac3", r2[6]);
	probatio("*** -> dfrac4", r2[7]);

	invalida(r1);
	sectio("[d]frac -> [d]frac [3]");
	VPU_TESTS.TEST3(@r1);
	probatio("frac1  -> dfrac1", r1[0]);
	probatio("frac2  -> dfrac2", r1[1]);
	probatio("frac3  -> dfrac3", r1[2]);
	probatio("frac4  -> dfrac4", r1[3]);
	probatio("dfrac1 -> frac1 ", r1[4]);
	probatio("dfrac2 -> frac2 ", r1[5]);
	probatio("dfrac3 -> frac3 ", r1[6]);
	probatio("dfrac4 -> frac4 ", r1[7]);

	invalida(r2);
	sectio("[d]fracX -> [d]fracY [4]");
	VPU_TESTS.TEST4(@r2);
	probatio("dfrac1 -> dfrac4", r2[0]);
	probatio("dfrac2 -> dfrac4", r2[1]);
	probatio("dfrac3 -> dfrac4", r2[2]);
	probatio("dfrac4 -> dfrac4", r2[3]);
	probatio("frac1  -> frac4 ", r2[4]);
	probatio("frac2  -> frac4 ", r2[5]);
	probatio("frac3  -> frac4 ", r2[6]);
	probatio("frac4  -> frac4 ", r2[7]);

	invalida(r1);
	sectio("[d]frac -> *** [5]");
	VPU_TESTS.TEST5(@r1);
	probatio("frac1  -> ***", r1[0]);
	probatio("frac2  -> ***", r1[1]);
	probatio("frac3  -> ***", r1[2]);
	probatio("frac4  -> ***", r1[3]);
	probatio("dfrac1 -> *** ", r1[4]);
	probatio("dfrac2 -> *** ", r1[5]);
	probatio("dfrac3 -> *** ", r1[6]);
	probatio("dfrac4 -> *** ", r1[7]);

	invalida(r2);
	sectio("[d]frac -> logicum [6]");
	VPU_TESTS.TEST6(@r2);
	probatio("frac1  -> logicum", r2[0]);
	probatio("frac2  -> logicum", r2[1]);
	probatio("frac3  -> logicum", r2[2]);
	probatio("frac4  -> logicum", r2[3]);
	probatio("dfrac1 -> logicum", r2[4]);
	probatio("dfrac2 -> logicum", r2[5]);
	probatio("dfrac3 -> logicum", r2[6]);
	probatio("dfrac4 -> logicum", r2[7]);

	invalida(r2);
	sectio("![d]frac -> logicum [7]");
	VPU_TESTS.TEST7(@r2);
	probatio("!frac1  -> logicum", r2[0]);
	probatio("!frac2  -> logicum", r2[1]);
	probatio("!frac3  -> logicum", r2[2]);
	probatio("!frac4  -> logicum", r2[3]);
	probatio("!dfrac1 -> logicum", r2[4]);
	probatio("!dfrac2 -> logicum", r2[5]);
	probatio("!dfrac3 -> logicum", r2[6]);
	probatio("!dfrac4 -> logicum", r2[7]);

	invalida(r2);
	sectio("[d]frac == [d]frac [8]");
	VPU_TESTS.TEST8(@r2);
	probatio("frac1  == frac1 ", r2[0]);
	probatio("frac2  == frac2 ", r2[1]);
	probatio("frac3  == frac3 ", r2[2]);
	probatio("frac4  == frac4 ", r2[3]);
	probatio("dfrac1 == dfrac1", r2[4]);
	probatio("dfrac2 == dfrac2", r2[5]);
	probatio("dfrac3 == dfrac3", r2[6]);
	probatio("dfrac4 == dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac != [d]frac [9]");
	VPU_TESTS.TEST9(@r2);
	probatio("frac1  != frac1 ", r2[0]);
	probatio("frac2  != frac2 ", r2[1]);
	probatio("frac3  != frac3 ", r2[2]);
	probatio("frac4  != frac4 ", r2[3]);
	probatio("dfrac1 != dfrac1", r2[4]);
	probatio("dfrac2 != dfrac2", r2[5]);
	probatio("dfrac3 != dfrac3", r2[6]);
	probatio("dfrac4 != dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac <= [d]frac [10]");
	VPU_TESTS.TEST10(@r2);
	probatio("frac1  <= frac1 ", r2[0]);
	probatio("frac2  <= frac2 ", r2[1]);
	probatio("frac3  <= frac3 ", r2[2]);
	probatio("frac4  <= frac4 ", r2[3]);
	probatio("dfrac1 <= dfrac1", r2[4]);
	probatio("dfrac2 <= dfrac2", r2[5]);
	probatio("dfrac3 <= dfrac3", r2[6]);
	probatio("dfrac4 <= dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac >= [d]frac [11]");
	VPU_TESTS.TEST11(@r2);
	probatio("frac1  >= frac1 ", r2[0]);
	probatio("frac2  >= frac2 ", r2[1]);
	probatio("frac3  >= frac3 ", r2[2]);
	probatio("frac4  >= frac4 ", r2[3]);
	probatio("dfrac1 >= dfrac1", r2[4]);
	probatio("dfrac2 >= dfrac2", r2[5]);
	probatio("dfrac3 >= dfrac3", r2[6]);
	probatio("dfrac4 >= dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac < [d]frac [12]");
	VPU_TESTS.TEST12(@r2);
	probatio("frac1  < frac1 ", r2[0]);
	probatio("frac2  < frac2 ", r2[1]);
	probatio("frac3  < frac3 ", r2[2]);
	probatio("frac4  < frac4 ", r2[3]);
	probatio("dfrac1 < dfrac1", r2[4]);
	probatio("dfrac2 < dfrac2", r2[5]);
	probatio("dfrac3 < dfrac3", r2[6]);
	probatio("dfrac4 < dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac > [d]frac [13]");
	VPU_TESTS.TEST13(@r2);
	probatio("frac1  > frac1 ", r2[0]);
	probatio("frac2  > frac2 ", r2[1]);
	probatio("frac3  > frac3 ", r2[2]);
	probatio("frac4  > frac4 ", r2[3]);
	probatio("dfrac1 > dfrac1", r2[4]);
	probatio("dfrac2 > dfrac2", r2[5]);
	probatio("dfrac3 > dfrac3", r2[6]);
	probatio("dfrac4 > dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac + [d]frac [14]");
	VPU_TESTS.TEST14(@r2);
	probatio("frac1  + frac1 ", r2[0]);
	probatio("frac2  + frac2 ", r2[1]);
	probatio("frac3  + frac3 ", r2[2]);
	probatio("frac4  + frac4 ", r2[3]);
	probatio("dfrac1 + dfrac1", r2[4]);
	probatio("dfrac2 + dfrac2", r2[5]);
	probatio("dfrac3 + dfrac3", r2[6]);
	probatio("dfrac4 + dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac - [d]frac [15]");
	VPU_TESTS.TEST15(@r2);
	probatio("frac1  - frac1 ", r2[0]);
	probatio("frac2  - frac2 ", r2[1]);
	probatio("frac3  - frac3 ", r2[2]);
	probatio("frac4  - frac4 ", r2[3]);
	probatio("dfrac1 - dfrac1", r2[4]);
	probatio("dfrac2 - dfrac2", r2[5]);
	probatio("dfrac3 - dfrac3", r2[6]);
	probatio("dfrac4 - dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac * [d]frac [16]");
	VPU_TESTS.TEST16(@r2);
	probatio("frac1  * frac1 ", r2[0]);
	probatio("frac2  * frac2 ", r2[1]);
	probatio("frac3  * frac3 ", r2[2]);
	probatio("frac4  * frac4 ", r2[3]);
	probatio("dfrac1 * dfrac1", r2[4]);
	probatio("dfrac2 * dfrac2", r2[5]);
	probatio("dfrac3 * dfrac3", r2[6]);
	probatio("dfrac4 * dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac / [d]frac [17]");
	VPU_TESTS.TEST17(@r2);
	probatio("frac1  / frac1 ", r2[0]);
	probatio("frac2  / frac2 ", r2[1]);
	probatio("frac3  / frac3 ", r2[2]);
	probatio("frac4  / frac4 ", r2[3]);
	probatio("dfrac1 / dfrac1", r2[4]);
	probatio("dfrac2 / dfrac2", r2[5]);
	probatio("dfrac3 / dfrac3", r2[6]);
	probatio("dfrac4 / dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac * [d]frac + [d]frac [18]");
	VPU_TESTS.TEST18(@r2);
	probatio("frac1  * frac1  + frac1 ", r2[0]);
	probatio("frac2  * frac2  + frac2 ", r2[1]);
	probatio("frac3  * frac3  + frac3 ", r2[2]);
	probatio("frac4  * frac4  + frac4 ", r2[3]);
	probatio("dfrac1 * dfrac1 + dfrac1", r2[4]);
	probatio("dfrac2 * dfrac2 + dfrac2", r2[5]);
	probatio("dfrac3 * dfrac3 + dfrac3", r2[6]);
	probatio("dfrac4 * dfrac4 + dfrac4", r2[7]);

	invalida(r2);
	sectio("[d]frac * [d]frac - [d]frac [19]");
	VPU_TESTS.TEST19(@r2);
	probatio("frac1  * frac1  - frac1 ", r2[0]);
	probatio("frac2  * frac2  - frac2 ", r2[1]);
	probatio("frac3  * frac3  - frac3 ", r2[2]);
	probatio("frac4  * frac4  - frac4 ", r2[3]);
	probatio("dfrac1 * dfrac1 - dfrac1", r2[4]);
	probatio("dfrac2 * dfrac2 - dfrac2", r2[5]);
	probatio("dfrac3 * dfrac3 - dfrac3", r2[6]);
	probatio("dfrac4 * dfrac4 - dfrac4", r2[7]);

	invalida(r2);
	sectio("|[d]frac| [20]");
	VPU_TESTS.TEST20(@r2);
	probatio("|frac1| ", r2[0]);
	probatio("|frac2| ", r2[1]);
	probatio("|frac3| ", r2[2]);
	probatio("|frac4| ", r2[3]);
	probatio("|dfrac1|", r2[4]);
	probatio("|dfrac2|", r2[5]);
	probatio("|dfrac3|", r2[6]);
	probatio("|dfrac4|", r2[7]);

	invalida(r2);
	sectio("-[d]frac [21]");
	VPU_TESTS.TEST21(@r2);
	probatio("-frac1 ", r2[0]);
	probatio("-frac2 ", r2[1]);
	probatio("-frac3 ", r2[2]);
	probatio("-frac4 ", r2[3]);
	probatio("-dfrac1", r2[4]);
	probatio("-dfrac2", r2[5]);
	probatio("-dfrac3", r2[6]);
	probatio("-dfrac4", r2[7]);

	invalida(r2);
	sectio("sqrt([d]frac) [22]");
	VPU_TESTS.TEST22(@r2);
	probatio("sqrt(frac1) ", r2[0]);
	probatio("sqrt(frac2) ", r2[1]);
	probatio("sqrt(frac3) ", r2[2]);
	probatio("sqrt(frac4) ", r2[3]);
	probatio("sqrt(dfrac1)", r2[4]);
	probatio("sqrt(dfrac2)", r2[5]);
	probatio("sqrt(dfrac3)", r2[6]);
	probatio("sqrt(dfrac4)", r2[7]);

	invalida(r2);
	sectio("reduce([d]frac) [23]");
	VPU_TESTS.TEST23(@r2);
	probatio("reduce(frac1) ", r2[0]);
	probatio("reduce(frac2) ", r2[1]);
	probatio("reduce(frac3) ", r2[2]);
	probatio("reduce(frac4) ", r2[3]);
	probatio("reduce(dfrac1)", r2[4]);
	probatio("reduce(dfrac2)", r2[5]);
	probatio("reduce(dfrac3)", r2[6]);
	probatio("reduce(dfrac4)", r2[7]);

	con.color_primus = consolatorium.color.viridis;
	con.scribe_lineam("Все тесты прошли успешно.");
	con.color_primus = consolatorium.color.defalta;
}